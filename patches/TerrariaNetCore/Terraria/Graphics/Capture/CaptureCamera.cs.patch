--- src/Terraria/Terraria/Graphics/Capture/CaptureCamera.cs
+++ src/TerrariaNetCore/Terraria/Graphics/Capture/CaptureCamera.cs
@@ -4,7 +_,6 @@
 using System;
 using System.Collections.Generic;
 using System.Drawing;
-using System.Drawing.Imaging;
 using System.IO;
 using System.Runtime.InteropServices;
 using System.Threading;
@@ -16,6 +_,10 @@
 
 internal class CaptureCamera : IDisposable
 {
+#if NETCORE
+	enum ImageFormat { Png }
+#endif
+
 	private class CaptureChunk
 	{
 		public readonly Microsoft.Xna.Framework.Rectangle Area;
@@ -206,10 +_,13 @@
 			return false;
 
 		try {
+#if !NETCORE
 			if (!Platform.IsWindows) {
+#endif
 				using (FileStream stream = File.Create(filename)) {
 					PlatformUtilities.SavePng(stream, width, height, width, height, _outputData);
 				}
+#if !NETCORE
 			}
 			else {
 				using (Bitmap bitmap = new Bitmap(width, height)) {
@@ -222,6 +_,7 @@
 					bitmap.Dispose();
 				}
 			}
+#endif
 
 			return true;
 		}
@@ -237,7 +_,9 @@
 		if (!Utils.TryCreatingDirectory(text))
 			return;
 
+#if !NETCORE
 		if (!Platform.IsWindows) {
+#endif
 			int elementCount = texture.Width * texture.Height * 4;
 			texture.GetData(_outputData, 0, elementCount);
 			int num = 0;
@@ -259,6 +_,7 @@
 				PlatformUtilities.SavePng(stream, width, height, width, height, _outputData);
 			}
 
+#if !NETCORE
 			return;
 		}
 
@@ -288,6 +_,7 @@
 			bitmap.UnlockBits(bitmapData);
 			bitmap.Save(text2, imageFormat);
 		}
+#endif
 	}
 
 	private void FinishCapture() {
