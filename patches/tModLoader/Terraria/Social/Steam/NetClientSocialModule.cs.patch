--- src/TerrariaNetCore/Terraria/Social/Steam/NetClientSocialModule.cs
+++ src/tModLoader/Terraria/Social/Steam/NetClientSocialModule.cs
@@ -27,12 +_,17 @@
 			_gameLobbyJoinRequested = Callback<GameLobbyJoinRequested_t>.Create(OnLobbyJoinRequest);
 			_p2pSessionRequest = Callback<P2PSessionRequest_t>.Create(OnP2PSessionRequest);
 			_p2pSessionConnectfail = Callback<P2PSessionConnectFail_t>.Create(OnSessionConnectFail);
-			Main.OnEngineLoad += CheckParameters;
+			if (Program.LaunchParameters.ContainsKey("+connect_lobby"))
+				ModLoader.ModLoader.OnSuccessfulLoad += CheckParameters; // Main.OnEngineLoad is too early, earlier than ModLoaderMod.
 		}
 
 		private void CheckParameters() {
-			if (Program.LaunchParameters.ContainsKey("+connect_lobby") && ulong.TryParse(Program.LaunchParameters["+connect_lobby"], out ulong result))
+			if (ulong.TryParse(Program.LaunchParameters["+connect_lobby"], out ulong result))
 				ConnectToLobby(result);
+			else {
+				Main.menuMode = 0;
+				ModLoader.Logging.tML.Error("The provided lobby ID was invalid: " + result);
+			}
 		}
 
 		public void ConnectToLobby(ulong lobbyId) {
@@ -121,6 +_,8 @@
 
 			string friendName = SteamFriends.GetFriendPersonaName(result.m_steamIDFriend);
 			Main.QueueMainThreadAction(delegate {
+				// If mods not loaded yet, this needs to run after mods load.
+				var joinAction = () =>
 				Main.OpenPlayerSelect(delegate (PlayerFileData playerData) {
 					Main.ServerSideCharacter = false;
 					playerData.SetAsActive();
@@ -128,6 +_,15 @@
 					Main.statusText = Language.GetTextValue("Social.JoiningFriend", friendName);
 					_lobby.Join(result.m_steamIDLobby, OnLobbyEntered);
 				});
+
+				// TODO: Consider adding this logic to Main.OpenPlayerSelect as well. Also add checks for any other async task we don't want interrupted.
+				if (ModLoader.ModLoader.Mods.Length == 0 || Main.menuMode == ModLoader.UI.Interface.loadModsID /*|| ModLoader.ModLoader.isLoading*/) {
+					ModLoader.Logging.tML.Info("OnLobbyJoinRequest: Delay joinAction via OnSuccessfulLoad");
+					ModLoader.ModLoader.OnSuccessfulLoad += joinAction;
+					return;
+				}
+				ModLoader.Logging.tML.Info("OnLobbyJoinRequest: Running joinAction directly");
+				joinAction();
 			});
 		}
 
